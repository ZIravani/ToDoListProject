@page "/todo"
@using ToDoListProject.Models
@rendermode InteractiveServer
@inject ILogger<TodoItem> Logger

<h3>Todo (@todos.Count(todo => !todo.IsDone))</h3>
<input @bind="newTodo" />
<button @onclick="AddTodo">Add todo</button>
<ul>
    @foreach (var todo in todos)
    {
        <li>
            <input type="checkbox" @bind="todo.IsDone" />
            <input @bind="todo.Title" />
        </li>
    }
</ul>
    <p>
    <code>currentCount</code>: @currentCount
    </p>
    <button class="btn btn-success" @onclick="IncrementCount">increase count</button>
<style>
    h3 {
        background-color: #f8f9;
        padding: 10px;
        font-style: @headingFontStyle;
    }
</style>

@code {
    private List<TodoItem> todos = new();
    string newTodo = "";
    private int currentCount;

    protected override void OnInitialized()
    {
        currentCount = Random.Shared.Next(100);
        Logger.LogInformation("currentCount set to {Count}", currentCount);
    }

    private void IncrementCount() => currentCount++;

    private string headingFontStyle = "italic";
    void AddTodo()
    {
        if (!string.IsNullOrWhiteSpace(newTodo))
        {
            todos.Add(new TodoItem { Title = newTodo });
            newTodo = string.Empty;
        }
    }
    

}